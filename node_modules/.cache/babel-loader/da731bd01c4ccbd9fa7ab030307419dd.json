{"remainingRequest":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\babel-loader\\lib\\index.js!D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\utils\\download.js","dependencies":[{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\utils\\download.js","mtime":1611658510000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\babel.config.js","mtime":1611658510000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmRvdC1hbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5zdGlja3kuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLm1hdGNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnVpbnQ4LWFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKLy8g5bCB6KOF5a+85Ye65pWw5o2u5bel5YW357G7Ci8vIOacrOi6q+S5n+aYr+mAmui/hyBheGlvcyDosIPnlKjlkI7nq6/mjqXlj6MKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsgLy8g6K6pIGF4aW9zIOm7mOiupOW4puS4gOS4quWTjeW6lOeahOexu+WeiyBhcnJheWJ1ZmZlciDkuozov5vliLbmlbDnu4Qg5rWBCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgcmVzcG9uc2VUeXBlOiAnYXJyYXlidWZmZXInCn0pOyAvLyDor7fmsYLmi6bmiKrlmagKCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBjb25maWcuaGVhZGVyc1snQXV0aG9yaXphdGlvbiddID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ3Rva2VuU3RyJyk7CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coZXJyb3IpOwp9KTsgLy8g5ZON5bqU5oum5oiq5ZmoCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3ApIHsKICB2YXIgaGVhZGVycyA9IHJlc3AuaGVhZGVyczsgLy8g5ou/5Yiw6K+35rGC5aS0CgogIHZhciByZWcgPSBSZWdFeHAoL2FwcGxpY2F0aW9uXC9qc29uLyk7IC8vIOWIpOaWrei/lOWbnua1gSDov5jmmK8gSnNvbiDlrZfnrKbkuLIKICAvLyDlpoLmnpzor7fmsYLlpLQg5Yy56YWN5q2j5YiZIOivtOaYjuaYr+S4gOS4quaZrumAmuivt+axggoKICBpZiAoaGVhZGVyc1snY29udGVudC10eXBlJ10ubWF0Y2gocmVnKSkgewogICAgcmVzcC5kYXRhID0gdW5pdFRvU3RyaW5nKHJlc3AuZGF0YSk7IC8vIOaLv+WIsCBqc29uIOWtl+espuS4suWvueixoQogIH0gZWxzZSB7CiAgICB2YXIgZmlsZURvd25sb2FkID0gcmVxdWlyZSgnanMtZmlsZS1kb3dubG9hZCcpOyAvLyDmj5Lku7YKCgogICAgdmFyIGZpbGVOYW1lID0gaGVhZGVyc1snY29udGVudC1kaXNwb3NpdGlvbiddLnNwbGl0KCc7JylbMV0uc3BsaXQoJ2ZpbGVuYW1lPScpWzFdOyAvL+aWh+S7tuWQjQoKICAgIHZhciBjb250ZW50VHlwZSA9IGhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddOyAvLyDlk43lupTnsbvlnosKCiAgICBmaWxlTmFtZSA9IGRlY29kZVVSSUNvbXBvbmVudChmaWxlTmFtZSk7IC8vIOagvOW8j+i9rOaNoiDpmLLmraLkubHnoIEKCiAgICBmaWxlRG93bmxvYWQocmVzcC5kYXRhLCBmaWxlTmFtZSwgY29udGVudFR5cGUpOyAvLyDpgJrov4fmj5Lku7bkuIvovb3mlofku7YKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKGVycm9yKTsKfSk7IC8vIOWkhOeQhiBqc29uIOagvOW8j+eahOi9rOaNoigg57yW56CBIOino+eggSDvvIkKCmZ1bmN0aW9uIHVuaXRUb1N0cmluZyh1bml0QXJyYXkpIHsKICB2YXIgZW5jb2RlZFN0cmluZyA9IFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgbmV3IFVpbnQ4QXJyYXkodW5pdEFycmF5KSk7CiAgdmFyIGRlY29kZWRTdHJpbmcgPSBkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKGVuY29kZWRTdHJpbmcpKTsKICByZXR1cm4gSlNPTi5wYXJzZShkZWNvZGVkU3RyaW5nKTsgLy8g6L2s5a+56LGhCn0gLy8g5LiL6L295paH5Lu255qE6K+35rGCCgoKdmFyIGJhc2UgPSAnJzsKZXhwb3J0IHZhciBkb3dubG9hZFJlcXVlc3QgPSBmdW5jdGlvbiBkb3dubG9hZFJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gc2VydmljZSh7CiAgICBtZXRob2Q6ICdnZXQnLAogICAgdXJsOiAiIi5jb25jYXQoYmFzZSkuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbXMKICB9KTsKfTsgLy8g5pW05L2T5pq06Zyy5Ye65Y6777yM5L6b5aSW55WM6LCD55SoCgpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["D:/广理学习/JAVA框架项目/乐字节-云E办/乐字节-云E办前端/yeb/src/utils/download.js"],"names":["axios","service","create","responseType","interceptors","request","use","config","headers","window","sessionStorage","getItem","error","console","log","response","resp","reg","RegExp","match","data","unitToString","fileDownload","require","fileName","split","contentType","decodeURIComponent","unitArray","encodedString","String","fromCharCode","apply","Uint8Array","decodedString","escape","JSON","parse","base","downloadRequest","url","params","method"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzBC,EAAAA,YAAY,EAAE;AADW,CAAb,CAAhB,C,CAIA;;AACAF,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAkCC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,CAAlC;AACA,SAAOJ,MAAP;AACH,CAHD,EAGG,UAAAK,KAAK,EAAI;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CALD,E,CAOA;;AACAX,OAAO,CAACG,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B,CAAkC,UAAAU,IAAI,EAAI;AACtC,MAAMR,OAAO,GAAGQ,IAAI,CAACR,OAArB,CADsC,CACT;;AAC7B,MAAIS,GAAG,GAAGC,MAAM,CAAC,mBAAD,CAAhB,CAFsC,CAEA;AACtC;;AACA,MAAIV,OAAO,CAAC,cAAD,CAAP,CAAwBW,KAAxB,CAA8BF,GAA9B,CAAJ,EAAwC;AACpCD,IAAAA,IAAI,CAACI,IAAL,GAAYC,YAAY,CAACL,IAAI,CAACI,IAAN,CAAxB,CADoC,CACA;AACvC,GAFD,MAEO;AACH,QAAIE,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B,CADG,CAC4C;;;AAC/C,QAAIC,QAAQ,GAAGhB,OAAO,CAAC,qBAAD,CAAP,CAA+BiB,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,EAA6CA,KAA7C,CAAmD,WAAnD,EAAgE,CAAhE,CAAf,CAFG,CAE8E;;AACjF,QAAIC,WAAW,GAAGlB,OAAO,CAAC,cAAD,CAAzB,CAHG,CAGuC;;AAC1CgB,IAAAA,QAAQ,GAAGG,kBAAkB,CAACH,QAAD,CAA7B,CAJG,CAIqC;;AACxCF,IAAAA,YAAY,CAACN,IAAI,CAACI,IAAN,EAAYI,QAAZ,EAAsBE,WAAtB,CAAZ,CALG,CAK4C;AAElD;AACJ,CAdD,EAcG,UAAAd,KAAK,EAAI;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CAhBD,E,CAkBA;;AACA,SAASS,YAAT,CAAsBO,SAAtB,EAAiC;AAC7B,MAAIC,aAAa,GAAGC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAeL,SAAf,CAAhC,CAApB;AACA,MAAIM,aAAa,GAAGP,kBAAkB,CAACQ,MAAM,CAACN,aAAD,CAAP,CAAtC;AACA,SAAOO,IAAI,CAACC,KAAL,CAAWH,aAAX,CAAP,CAH6B,CAGI;AACpC,C,CAED;;;AACA,IAAII,IAAI,GAAG,EAAX;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,SAAOxC,OAAO,CAAC;AACXyC,IAAAA,MAAM,EAAE,KADG;AAEXF,IAAAA,GAAG,YAAKF,IAAL,SAAYE,GAAZ,CAFQ;AAGXpB,IAAAA,IAAI,EAAEqB;AAHK,GAAD,CAAd;AAKH,CANM,C,CAQP;;AACA,eAAexC,OAAf","sourcesContent":["// 封装导出数据工具类\n// 本身也是通过 axios 调用后端接口\nimport axios from \"axios\";\n\n// 让 axios 默认带一个响应的类型 arraybuffer 二进制数组 流\nconst service = axios.create({\n    responseType: 'arraybuffer'\n})\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n    config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr')\n    return config\n}, error => {\n    console.log(error)\n})\n\n// 响应拦截器\nservice.interceptors.response.use(resp => {\n    const headers = resp.headers // 拿到请求头\n    let reg = RegExp(/application\\/json/) // 判断返回流 还是 Json 字符串\n    // 如果请求头 匹配正则 说明是一个普通请求\n    if (headers['content-type'].match(reg)) {\n        resp.data = unitToString(resp.data) // 拿到 json 字符串对象\n    } else {\n        let fileDownload = require('js-file-download') // 插件\n        let fileName = headers['content-disposition'].split(';')[1].split('filename=')[1]//文件名\n        let contentType = headers['content-type'] // 响应类型\n        fileName = decodeURIComponent(fileName) // 格式转换 防止乱码\n        fileDownload(resp.data, fileName, contentType) // 通过插件下载文件\n\n    }\n}, error => {\n    console.log(error)\n})\n\n// 处理 json 格式的转换( 编码 解码 ）\nfunction unitToString(unitArray) {\n    let encodedString = String.fromCharCode.apply(null, new Uint8Array(unitArray))\n    let decodedString = decodeURIComponent(escape(encodedString))\n    return JSON.parse(decodedString) // 转对象\n}\n\n// 下载文件的请求\nlet base = ''\nexport const downloadRequest = (url, params) => {\n    return service({\n        method: 'get',\n        url: `${base}${url}`,\n        data: params\n    })\n}\n\n// 整体暴露出去，供外界调用\nexport default service;\n"]}]}