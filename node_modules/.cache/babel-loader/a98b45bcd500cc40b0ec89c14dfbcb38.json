{"remainingRequest":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\babel-loader\\lib\\index.js!D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\utils\\api.js","dependencies":[{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\utils\\api.js","mtime":1611658510000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\babel.config.js","mtime":1611658510000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXVpIjsKaW1wb3J0IHJvdXRlciBmcm9tICJAL3JvdXRlciI7IC8vIOivt+axguaLpuaIquWZqAoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAvLyDlpoLmnpzlrZjlnKggdG9rZW7vvIzor7fmsYLmkLrluKbov5nkuKogdG9rZW4oIOeZu+W9leeahOaXtuWAmSDmioogdG9rZW4g5a2Y5YWl5LqGIHNlc3Npb25TdG9yYWdlIO+8iQogIGlmICh3aW5kb3cuc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgidG9rZW5TdHIiKSkgewogICAgLy8gdG9rZW4g55qEa2V5IDogQXV0aG9yaXphdGlvbiA7IHZhbHVlOiB0b2tlblN0cgogICAgY29uZmlnLmhlYWRlcnNbJ0F1dGhvcml6YXRpb24nXSA9IHdpbmRvdy5zZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCd0b2tlblN0cicpOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgY29uc29sZS5sb2coZXJyb3IpOwp9KTsgLy8g5ZON5bqU5oum5oiq5ZmoIC0g57uf5LiA5aSE55CG5raI5oGv5o+Q56S6CgpheGlvcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChzdWNjZXNzKSB7CiAgLy8g5Lia5Yqh6YC76L6R6ZSZ6K+vCiAgaWYgKHN1Y2Nlc3Muc3RhdHVzICYmIHN1Y2Nlc3Muc3RhdHVzID09PSAyMDApIHsKICAgIC8vIOiwg+WIsOaOpeWPowogICAgLy8g5ZCO56uv77yaNTAwIOS4muWKoemAu+i+kemUmeivr++8jDQwMSDmnKrnmbvlvZXvvIw0MDMg5peg5p2D6K6/6Zeu77ybCiAgICBpZiAoc3VjY2Vzcy5kYXRhLmNvZGUgPT09IDUwMCB8fCBzdWNjZXNzLmRhdGEuY29kZSA9PT0gNDAxIHx8IHN1Y2Nlc3MuZGF0YS5jb2RlID09PSA0MDMpIHsKICAgICAgTWVzc2FnZS5lcnJvcih7CiAgICAgICAgbWVzc2FnZTogc3VjY2Vzcy5kYXRhLm1lc3NhZ2UKICAgICAgfSk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoc3VjY2Vzcy5kYXRhLm1lc3NhZ2UpIHsKICAgICAgLy8g6L6T5Ye65ZCO56uvIOa3u+WKoOaIkOWKnyDkuYvnsbvnmoTkv6Hmga8KICAgICAgTWVzc2FnZS5zdWNjZXNzKHsKICAgICAgICBtZXNzYWdlOiBzdWNjZXNzLmRhdGEubWVzc2FnZQogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiBzdWNjZXNzLmRhdGE7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIOayoeiuv+mXruWIsOWQjuerr+aOpeWPowogIGlmIChlcnJvci5yZXNwb25zZS5jb2RlID09PSA1MDQgfHwgZXJyb3IucmVzcG9uc2UuY29kZSA9PT0gNDA0KSB7CiAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogJ+acjeWKoeWZqOiiq+WQg+aOieS6hicKICAgIH0pOwogIH0gZWxzZSBpZiAoZXJyb3IucmVzcG9uc2UuY29kZSA9PT0gNDAzKSB7CiAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogJ+adg+mZkOS4jei2s++8jOivt+iBlOezu+euoeeQhuWRmO+8gScKICAgIH0pOwogIH0gZWxzZSBpZiAoZXJyb3IucmVzcG9uc2UuY29kZSA9PT0gNDAxKSB7CiAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgbWVzc2FnZTogJ+aCqOi/mOacqueZu+W9le+8jOivt+eZu+W9le+8gScKICAgIH0pOwogICAgcm91dGVyLnJlcGxhY2UoJy8nKTsgLy8g6Lev55Sx5pu/5o2iCiAgfSBlbHNlIHsKICAgIGlmIChlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UpIHsKICAgICAgTWVzc2FnZS5lcnJvcih7CiAgICAgICAgbWVzc2FnZTogZXJyb3IucmVzcG9uc2UuZGF0YS5tZXNzYWdlCiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgTWVzc2FnZS5lcnJvcih7CiAgICAgICAgbWVzc2FnZTogJ+acquefpemUmeivr++8gScKICAgICAgfSk7CiAgICB9CiAgfQoKICByZXR1cm47Cn0pOyAvLyDpooTlpIfliY3nva7ot6/lvoQKCnZhciBiYXNlID0gJyc7IC8vIOS8oOmAgSBqc29uIOagvOW8j+eahCBwb3N0IOivt+axggoKZXhwb3J0IHZhciBwb3N0UmVxdWVzdCA9IGZ1bmN0aW9uIHBvc3RSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgdXJsOiAiIi5jb25jYXQoYmFzZSkuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbXMKICB9KTsKfTsgLy8g5Lyg6YCBIGpzb24g5qC85byP55qEIGdldCDor7fmsYIKCmV4cG9ydCB2YXIgZ2V0UmVxdWVzdCA9IGZ1bmN0aW9uIGdldFJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAnZ2V0JywKICAgIHVybDogIiIuY29uY2F0KGJhc2UpLmNvbmNhdCh1cmwpLAogICAgZGF0YTogcGFyYW1zCiAgfSk7Cn07IC8vIOS8oOmAgSBqc29uIOagvOW8j+eahCBwdXQg6K+35rGCCgpleHBvcnQgdmFyIHB1dFJlcXVlc3QgPSBmdW5jdGlvbiBwdXRSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3B1dCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcwogIH0pOwp9OyAvLyDkvKDpgIEganNvbiDmoLzlvI/nmoQgZGVsZXRlIOivt+axggoKZXhwb3J0IHZhciBkZWxldGVSZXF1ZXN0ID0gZnVuY3Rpb24gZGVsZXRlUmVxdWVzdCh1cmwsIHBhcmFtcykgewogIHJldHVybiBheGlvcyh7CiAgICBtZXRob2Q6ICdkZWxldGUnLAogICAgdXJsOiAiIi5jb25jYXQoYmFzZSkuY29uY2F0KHVybCksCiAgICBkYXRhOiBwYXJhbXMKICB9KTsKfTs="},{"version":3,"sources":["D:/广理学习/JAVA框架项目/乐字节-云E办/乐字节-云E办前端/yeb/src/utils/api.js"],"names":["axios","Message","router","interceptors","request","use","config","window","sessionStorage","getItem","headers","error","console","log","response","success","status","data","code","message","replace","base","postRequest","url","params","method","getRequest","putRequest","deleteRequest"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {Message} from \"element-ui\";\nimport router from \"@/router\";\n\n// 请求拦截器\naxios.interceptors.request.use(config => {\n    // 如果存在 token，请求携带这个 token( 登录的时候 把 token 存入了 sessionStorage ）\n    if (window.sessionStorage.getItem(\"tokenStr\")) {\n        // token 的key : Authorization ; value: tokenStr\n        config.headers['Authorization'] = window.sessionStorage.getItem('tokenStr')\n    }\n    return config;\n},error => {\n    console.log(error)\n})\n\n// 响应拦截器 - 统一处理消息提示\naxios.interceptors.response.use(success => {\n    // 业务逻辑错误\n    if (success.status && success.status === 200) { // 调到接口\n        // 后端：500 业务逻辑错误，401 未登录，403 无权访问；\n        if (success.data.code === 500 || success.data.code === 401 || success.data.code === 403) {\n            Message.error({message: success.data.message})\n            return\n        }\n        if (success.data.message) { // 输出后端 添加成功 之类的信息\n            Message.success({message: success.data.message})\n        }\n    }\n    return success.data\n}, error => { // 没访问到后端接口\n    if (error.response.code === 504 || error.response.code === 404) {\n        Message.error({message: '服务器被吃掉了'})\n    } else if (error.response.code === 403) {\n        Message.error({message: '权限不足，请联系管理员！'})\n    } else if (error.response.code === 401) {\n        Message.error({message: '您还未登录，请登录！'})\n        router.replace('/') // 路由替换\n    } else {\n        if (error.response.data.message) {\n            Message.error({message: error.response.data.message})\n        } else {\n            Message.error({message: '未知错误！'})\n        }\n    }\n    return\n})\n\n// 预备前置路径\nlet base = '';\n\n// 传送 json 格式的 post 请求\nexport const postRequest = (url, params) => {\n    return axios({\n        method: 'post',\n        url: `${base}${url}`,\n        data: params\n    })\n}\n\n// 传送 json 格式的 get 请求\nexport const getRequest = (url, params) => {\n    return axios({\n        method: 'get',\n        url: `${base}${url}`,\n        data: params\n    })\n}\n\n// 传送 json 格式的 put 请求\nexport const putRequest = (url, params) => {\n    return axios({\n        method: 'put',\n        url: `${base}${url}`,\n        data: params\n    })\n}\n\n// 传送 json 格式的 delete 请求\nexport const deleteRequest = (url, params) => {\n    return axios({\n        method: 'delete',\n        url: `${base}${url}`,\n        data: params\n    })\n}\n"]}]}