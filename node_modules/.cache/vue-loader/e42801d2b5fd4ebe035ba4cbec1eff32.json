{"remainingRequest":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\components\\sys\\basic\\DepMana.vue?vue&type=style&index=0&id=0e3b1724&scoped=true&lang=css&","dependencies":[{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\src\\components\\sys\\basic\\DepMana.vue","mtime":1611658510000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\广理学习\\JAVA框架项目\\乐字节-云E办\\乐字节-云E办前端\\yeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiA4ICovCi5kZXBCdG4gewogIHBhZGRpbmc6IDJweDsKfQoK"},{"version":3,"sources":["DepMana.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8MA;AACA;AACA;AACA","file":"DepMana.vue","sourceRoot":"src/components/sys/basic","sourcesContent":["<template>\n  <div style=\"width: 500px\">\n    <!-- 1 -->\n    <el-input\n        placeholder=\"请输入部门名称进行搜索...\"\n        prefix-icon=\"el-icon-search\"\n        v-model=\"filterText\">\n    </el-input>\n    <!-- 9、:expand-on-click-node=\"false\" 点击小三角箭头才会展开\n            :default-expand-all=\"false\"\t设置默认不展开所有节点 -->\n    <el-tree\n        :data=\"deps\"\n        :props=\"defaultProps\"\n        default-expand-all\n        :filter-node-method=\"filterNode\"\n        :expand-on-click-node=\"false\"\n        ref=\"tree\">\n      <!-- 7、label: 'name' -->\n      <!-- 8、style=\"display: flex;justify-content: space-between;width: 100% 父容器宽度\" 让添加和删除按键居右 -->\n      <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\"\n            style=\"display: flex;justify-content: space-between;width: 100%\">\n        <span>{{ data.name }}</span>\n        <span>\n          <el-button\n              plain\n              type=\"primary\"\n              size=\"mini\"\n              class=\"depBtn\"\n              @click=\"() => showAddDep(data)\">\n            添加部门\n          </el-button>\n          <!-- 10、showAddDep(data)  deleteDep(data)  data 后端传过来的完整的 json 对象 -->\n          <el-button\n              plain\n              type=\"danger\"\n              size=\"mini\"\n              class=\"depBtn\"\n              @click=\"() => deleteDep(data)\">\n            删除部门\n          </el-button>\n        </span>\n      </span>\n    </el-tree>\n    <!-- 13、对话弹框 -->\n    <el-dialog\n        title=\"添加部门\"\n        :visible.sync=\"dialogVisible\"\n        width=\"30%\">\n      <!-- 16 -->\n      <div>\n        <table>\n          <tr>\n            <td>\n              <el-tag>上级部门</el-tag>\n            </td>\n            <td>{{ pname }}</td>\n          </tr>\n          <tr>\n            <td>\n              <el-tag>部门名称</el-tag>\n            </td>\n            <td>\n              <el-input v-model=\"dep.name\" placeholder=\"请输入部门名称...\" size=\"small\"></el-input>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <!-- 18、确定添加按钮绑定事件 @click=\"doAddDep\" -->\n        <el-button type=\"primary\" @click=\"doAddDep\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"DepMana\",\n  data() {\n    return { // 2\n      filterText: '',\n      deps: [], // 所有部门整个数组\n      defaultProps: { // 2 关联子部门\n        children: 'children',\n        label: 'name'\n      },\n      dialogVisible: false, // 14\n      dep: { // 15、添加部门数据象\n        name: '',\n        parentId: -1,\n        isParent: ''\n      },\n      pname: '' // 15、上级部门名称\n    }\n  },\n  watch: {\n    // 4、观察者事件，监控输入框的值(框架方法）\n    filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  mounted() {\n    this.initDeps()  // 6、调用获取所有部门方法\n  },\n  methods: {\n    // 删除部门调用的方法\n    removeDepFromDeps(p, deps, id) {\n      for (let i = 0; i < deps.length; i++) {\n        let d = deps[i]\n        if (d.id === id) {\n          deps.splice(i, 1)\n          if (deps.length === 0) {\n            p.isParent = false\n          }\n          return;\n        } else {\n          this.removeDepFromDeps(d, d.children, id)\n        }\n\n      }\n\n    },\n    // 12、删除部门\n    deleteDep(data) {\n      // console.log(data)\n      if (data.isParent) {\n        this.$message.error('父部门删除失败！')\n      } else {\n        this.$confirm('此操作将永久删除该[' + data.name + ']部门, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.deleteRequest('/system/basic/department/' + data.id).then(resp => {\n            if (resp) {\n              this.removeDepFromDeps(null, this.deps, data.id)\n            }\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      }\n    },\n    // 20、添加完部门 初始化 清空数据\n    initDep() {\n      this.dep = {\n        name: '',\n        parentId: -1\n      }\n      this.pname = ''\n    },\n    // 22、 递归查询所有部门信息，deps 查询到的整个数组，dep 添加的部门\n    addDep2Deps(deps, dep) {\n      for (let i = 0; i < deps.length; i++) {\n        let d = deps[i] // 父部门\n        if (d.id === dep.parentId) {\n          d.children = d.children.concat(dep) // 把 dep 加为 d 的子部门\n          if (d.children.length > 0) {\n            d.isParent = true\n          }\n          return;\n        } else {\n          this.addDep2Deps(d.children, dep) // 递归调用此方法 以查询结果为条件 继续查询子部门\n        }\n      }\n    },\n    // 19、确认添加部门\n    doAddDep() {\n      this.postRequest('/system/basic/department/', this.dep).then(resp => {\n        if (resp) {\n          // console.log(resp)\n          this.dialogVisible = false // 关闭对话框\n          this.addDep2Deps(this.deps, resp.data) // 23、【无效】手动插入部门 显示添加后的数据\n          this.initDep() // 21、调用初始化方法 清空数据\n        }\n      })\n    },\n    // 11、17、添加部门弹框\n    showAddDep(data) {\n      // console.log(data)\n      this.dep.parentId = data.id\n      this.pname = data.name\n      this.dialogVisible = true\n    },\n\n    // 5、获取所有部门\n    initDeps() {\n      this.getRequest('/system/basic/department/').then(resp => {\n        if (resp) {\n          this.deps = resp\n        }\n      })\n    },\n    // 3、事件(框架方法）\n    filterNode(value, data) { // data 整行数据\n      if (!value) return true; // true 节点可以展示，false 节点隐藏\n      return data.name.indexOf(value) !== -1; // label: 'name'\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 8 */\n.depBtn {\n  padding: 2px;\n}\n\n</style>\n"]}]}